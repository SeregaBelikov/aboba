# print("My namne is Srerega,my adres is Mashtoc 31")


# first=input('Enter your name: ')
# print(f'Hi {first}')



# a = int(input('Enter your number 1 :'))
# b = int(input('Enter your number 2 :'))
# print(a + b)
# print(a * b)
# print(a / b)



# x='Python'
# print(type(x))
# y='Java'
# print(type(y))
# c='C++'
# print(type(c))
# a='Hello world'
# print(type(a))
# b='Hello python'
# print(type(b))
# d='Hello python team'
# print(type(d))
# e='C#'
# print(type(e))


# x=10
# y=10.1
# print(x>y)
# print(x<y)
# print(x<=y)
# print(x>=y)
# print(x==y)
# print(x!=y)

# a=5
# b=3.5
# print(a>b)
# print(a<b)
# print(a<=b)
# print(a>=b)
# print(a==b)
# print(a!=y)

# h=7
# q=5.21
# print(h>q)
# print(h<q)
# print(h<=q)
# print(h>=q)
# print(h==q)
# print(h!=q)

# c=9
# z=9.0
# print(c>z)
# print(c<z)
# print(c<=z)
# print(c>=z)
# print(c==z)
# print(c!=z)

# m=6
# n=6.1
# print(m>n)
# print(m<n)
# print(m<=m)
# print(m>=n)
# print(m==n)
# print(m!=n)

# f=16
# v=1.6
# print(f>v)
# print(f<v)
# print(f<=v)
# print(f>=v)
# print(f==v)
# print(f!=v)

# l=24
# k=2.42
# print(l>k)
# print(l<k)
# print(l<=k)
# print(l>=k)
# print(l==k)
# print(l!=k)

# s=3
# r=3.01
# print(s>r)
# print(s<r)
# print(s<=r)
# print(s>=r)
# print(s==r)
# print(s!=r)

# g=20
# j=2.0
# print(g>j)
# print(g<j)
# print(g<=j)
# print(g>=j)
# print(g==j)
# print(g!=j)

# t=2
# w=2.00
# print(t>w)
# print(t<w)
# print(t<=w)
# print(t>=w)
# print(t==w)
# print(t!=w)







# km=1
# mile=1.609
# America=int(input('Enter mile-per-gallon-MPG:  '))
# Canada=print(America*mile)


# santimetr=1
# fut=30.54
# inch=2.52
# high1=int(input('Enter your high in fut:  '))
# high2=int(input('Enter your high in inch:  '))
# high3=print(high1*fut)
# high3=print(high2*inch)



# fut=1
# yard=3
# inch=12
# mile=5280
# distance=int(input('Enter distance in fut:   '))
# distance1=print(distance/yard)
# distance2=print(distance/inch)
# distance3=print(distance/mile)


# from math import pi
# r=int(input('Enter raadius:  '))
# area=print((r^2)*pi)
# volue=print((r^3)*pi*4/3)


# leigh=int(input('Enter leigh of truengle:  '))
# high=int(input('Enter high of truengle:  '))
# area=print(leigh*high/2)


# a=int(input('Enter first side of truengle:  '))
# b=int(input('Enter second side of truengle:  '))
# c=int(input('Enter thrird side of truengle:  '))
# S=print(a*b*c)



# s=int(input('Enter ligh of side:  '))
# n=int(input('Enter count of side:  '))
# area=print(s*n)


# min=60
# hour=3600
# day=86400
# periud1=int(input('Enter your periud in minutes:  '))
# periud2=int(input('Enter your periud in hours:  '))
# periud3=int(input('Enter your prtiud in days:  '))
# periud=print(periud1*60)
# periud4=print(periud2*3600)
# periud5=print(periud3*86400)








# bread=3.49
# count=int(input('Enter count of yesterdays bread:  '))
# print('bread cost 3.49$')
# print('bread with sale cost 1,396 cent')
# print(1.396*count)


# a=int(input('Enter your number1:  '))
# b=int(input('Enter your number2:  '))
# c=int(input('Enter your number3:  '))
# print(min(a,b,c))
# print(a<b<c)
# print(b<a<c)
# print(c<b<a)
# print(max(a,b,c))















# human_age=int(input('Enter human age:  '))
# if human_age>=2:
#     print(f'dog_age={human_age/10.5}')
# else:
#     print(f'dog_age={(human_age)/4+13}')



# letter=input('Enter your letter:  ')
# if letter in 'aeiuo':
#     print(' Vowel:  ')
# else:
#     print(' Consonant:  ')



# month=input('Enter month:  ')
# if month in 'AprilNovemberJulyOctober':
#     print('30 days')   
# if month in 'JanuaryJuneAugustSeptemberDesemberMay':
#     print('31 days')
# if month in 'February':
#     print('28-29 days')


# noise=int(input('Enter your db noise(min 40):  '))
# if noise  in  '40':
#     print('room')
# if noise in '70':
#     print('alarm')
# if noise in '106':
#     print('lawn mower')
# if noise in '130':
#     print('jackhamer')





























# month=int(input('Enter your month:  '))
# day=int(input('Enter your day:  '))
# if  (month==12  and 22 <=day<= 31)or\
#      (month==1 and 1<=day<=19):
#      print('Козерог')
# elif (month==1 and 20<=day<=31)or\
#       (month==2 and 1<=day<=18):
#      print('Водолей')
# elif (month==2 and 19<=day<=28)or\
#       (month==3 and 1<=day<=20):
#      print('Рыбы')
# elif (month==3 and 21<=day<=31)or\
#       (month==4 and 1<=day<=19):
#      print('Овен')
# elif (month==4 and 20<=day<=30)or\
#       (month==5 and 1<=day<=20):
#      print('Телец')
# elif (month==5 and 21<=day<=28)or\
#       (month==6 and 1<=day<=20):
#      print('Близнецы')
# elif (month==6 and 21<=day<=30)or\
#       (month==7 and 1<=day<=22):
#      print('Рак')
# elif (month==7 and 23<=day<=31)or\
#       (month==8 and 1<=day<=22):
#      print('Лев')
# elif (month==8 and 23<=day<=31)or\
#       (month==9 and 1<=day<=22):
#      print('Дева')
# elif (month==9 and 23<=day<=30)or\
#       (month==10 and 1<=day<=22):
#      print('Весы')
# elif (month==10 and 23<=day<=31)or\
#       (month==11 and 1<=day<=21):
#      print('Скорпион')
# elif (month==11 and 22<=day<=30)or\
#       (month==12 and 1<=day<=21):
#      print('Стрелец')
# else:
#      print('Erorr')




# quake=float(input('Enter quake lvl:  '))
# if quake<2.0:
#     print('Минимальное')
# elif 2.0<=quake<3.0:
#     print('Очень слабое')
# elif 3.0<=quake<4.0:
#     print('Слабое')
# elif 4.0<=quake<5.0:
#     print('Промежутачное')
# elif 5.0<=quake<6.0:
#     print('Умеренное')
# elif 6.0<=quake<7.0:
#     print('Сильное')
# elif 7.0<=quake<8.0:
#     print('Очень сильное')
# elif 8.0<=quake<10.0:
#     print('Огромное')
# elif quake>=10.0:
#     print('Разрушительное')





# mark=float(input('Enter your mark 0-4:  '))
# if mark>=4.0:
#     print('A+')
# elif mark<=4.0:
#     print('A')
# elif mark<=3.7:
#     print('A-')
# elif mark<=3.3:
#     print('B+')
# elif mark<=3.0:
#     print('B')
# elif mark<=2.7:
#     print('B-')
# elif mark<=2.3:
#     print('C+')
# elif mark<=2.0:
#     print('C')
# elif mark<=1.7:
#     print('C-')
# elif mark<=1.3:
#     print('D+')
# elif mark<=1.0:    
#     print('D')
# elif mark<=0:
#     print('F')
# else:
#     print('Erorr')







# частота=int(input('Нпишите частоту:  '))
# if частота==3*10^9:
#     print('Радиоволны')
# elif частота==3*10^9 or\
#       частота==4.3















# age=int(input('Enter age of each people:  '))
# people=int(input('Enter count of people:  '))
# for people in range:
#  if age<=2:
#    age1= print('free')
#  elif  3<=age<=12:
#    age2= print('$14.00')
#  elif age>65:
#     age3=print('$18.00')
#  elif  12<age<=65:
#    age4= print('23.00')
# total=(age) 






# n=int(input('Enter number: '))
# for i in range(1,n):
#     if n%3==0:
#         print('Fizz')
#         break
#     elif n%5==0:
#         print('Buzz')
#         break
# else:
#      print(n+1)




# word=input('Enter word:  ')
# polindrom=(word[::-1])
# if polindrom==word: 
#      print('Polindrom')
# else:
#      print('Not polindrom')




# text=input('Enter text:  ')
# polidrom_text=(text[::-1])
# if polidrom_text==text:
#     print('Text is polindrom')
# else:
#     print('Text is not polindrom ')







# from random import random
# one=int(input('Enter number: '))
# for random in (5,104,102,101):
#     if one == random:
#         print('EZ GGS')
#         break
# else:
#     print('Erorr')







#pi=print(3+4/2*3*4-4/4*5*6+4/6*7*8-4/8*9*10+4/10*11*12-4/12*13*14+4/14*15*16-4/16*17*18+4/18*19*20-4/20*21*22+4/22*23*24-4/24*25*26+4/26*27*28-4/28*29*30+4/30*31*32)









# P=0
# while True:
#     x=int(input('Enter x:  '))
#     y=int(input('Enter y:  '))
#     if x==0:
#         print(P+x+y)

     

# from random import random
# for i in range(1,101):
#     print(i)



# a='d'
# b='e'
# c='f'
# d='g'
# e='h'
# f='i'
# g='j'
# h='k'
# i='l'
# j='m'
# k='n'
# l='o'
# m='p'
# n='q'
# o='r'
# p='s'
# q='t'
# r='v'
# s='w'
# t='x'
# v='y'
# w='z'
# x='a'
# y='b'
# z='c'
# cod_cesar=input('Enter text on cesar code:  ').lower
# if cod_cesar in 


# from random import random
# for i in range (1,11): 




# for i in range(4):
#     for j in range(3+i):
#         if j <=3-i:
#             print(" ",end=" ")
#         else:
#             print("*",end=" ")
#     print()
# for i in range(4):
#     for j in range(i+3):
#         if j <=i-3:
#             print(" ",end=" ")
#         else:
#             print("*",end=" ")
#     print()



# print(' *')
# print('*  *')
# print('*****')
# print('*   *')
# print('*     *')



# print('   *')
# print('  *** ')
# print(' *****')
# print('*******')
# print(' *****')
# print('  ***')
# print('   *')






#_____________________________________________________________________________________________________________________________________________________






# tup =  (1,3,5,6,7,9,11,15,18,20,23)
# target = 1
# start = 0
# stop = len(tup) - 1
# while start <= stop:
#     mid = (start+stop)//2
#     if tup[mid] == target:
#         print(mid);break
#     elif target < tup[mid]:
#         stop = mid - 1
#     elif target > tup[mid]:
#         start = mid + 1



# num = (7,7,9,7)
# target = 7
# start = 0 
# stop = len(num) - 1
# while start <= stop:
#     mid = (start+stop)//2
#     if num[mid] == target:
#         print(mid);break
#     elif target < num[mid]:
#         stop = mid - 1
#     elif target > num[mid]:
#         start = mid + 1
#     elif target == start == stop:
#         print('Erorr')






#_______________________________________________________________________________________________________________________________________________-





# S=int(input('Enter km:  '))
# print(4+(S*1000/140*0.25))


# count=int(input('Enter count of product:  '))
# print(10.95+(2.95*(count-1)))



#__________________________________________________________________________________________________________________________________________________________




# def num(n):
#      int(input('Enter number:  '))
# if   




# def polindrom(word):
#     if polindrom(word[::1])==word:
#         return word
#     else:
#         print('Erorr')
# print(polindrom(''))







# a=0.1
# b=0.5
# c=0.10
# d=0.25
# money=int(input('Enter cpunt of money ($):  '))
# if money/d==0:
#     print(money/d('25 C'))
# elif money/c==0:
#     print(money/c('10 C'))
# elif money/b==0:
#     print(money/b('5 C'))
# else:a 
#      print(money/d('cent'))


#______________________________________________________________________________________________________________________________________________




# while True:
#     a=int(input('Enter number: '))
#     if a==0:
#         print(a[min])
#     else:
#         print('Erorr')




#______________________________________________________________________________127______________________________________________________________________________________

# lst=[]
# while True:
#     n=input('Enter number: ')
#     if n=='':
#         break
#     else:
#         lst.append(int(n))

#         if lst==sorted(lst):
#             print(True)
#         else:
#             print(False)


#___________________________________________________________________________128______________________________________________________________________________________

# def countrange(lst,min,max):
#     count=0
#     for i in lst:
#         if min <= i and i < max:
#             count +=1
#             return count
# print(countrange)





#______________________________________________________________________________________________________________________________________________________




# reverseLookup={ 
#     'name':'babyjohn',
#     'age':99,
#     'number':'+01-11255165',
#     'live place':'Kazahstan',
# }
# for x in reverseLookup.keys():
#     print(x)


#______________________________________________________________________________________________________________________________________________________________________________









# def countNicepairs(self,nums:list[int])->int:
#     def rev(num):
#         result=0
#         while num:
#             result=result*10+num%10
#             num//=10
#             return result
#         arr=[]
#         for i in range (len(nums)):
#             arr.append(nums[i]-rev(nums[i]))
#             dic=self(int)
#             ans=0
#             MOD=10**9+7
#             for num in arr:
#                 ans=(ans+dic[num])%MOD
#                 dic[num]+=1
#                 return ans
#             print(countNicepairs)







# nums={1,4,5,7,2,8}
# target=9
# while True:
#     if target//nums==(nums[::-1]):
#         print('True')
#     else:
#         print('Erorr')






# open('info.txt',mode='x')
 

# file=open('info.txt',mode='w')
# file.write('Hello my Chocolate friend')
# file.close




# with open('info.txt',mode='w')as file:
#     file.write('\nHow are you?')

# with open('info.txt',mode='r')as file:
#     content=file.readline(1)
#     print(content)


      

    

#____________________________________________________________________________________________________________________________________________



    
# son={
# 'name':'A',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'B',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'C',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'D',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'E',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'F',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'G',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'H',#This is 7 son
# 'gender':'male',
# 'children':[]}
# {
# 'name':'I',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'J',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'K',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'L',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'M',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'N',
# 'gender':'male',
# 'children':[]}
# {
# 'name':'O',#This is 7 son of 7 son
# 'gender':'male',
# 'children':[]}


# import json
# def son(x):
#     son=json.loads(x)
#     son_1=0
#     son_2=0
#     ans=set()
#     for child in son ['children']:
#         if child['gender']=='male':
#             son_1+=1
#             if son_1==7:
#                 for dad in child['children']:
#                     if dad['gender']=='male':
#                         return ans
#                     def son(x):
#                         x=json.load(x)
#                         if len(x['children'])>=7:
#                             for child_1 in range(7):
#                                 if x['children'][child_1]['gender']!='male':
#                                     break
#                                 else:
#                                     if len(x['children'][6]['children'])>=7:
#                                         for child_1 in range(7):
#                                             if x['children'][6]['children'][child_1]['gender']!='male':
#                                                 break
#                                             else:
#                                                 if len(x['children'][6]['children'][6]['children'])==0:
#                                                     return{x['children'][6]['children'][6]['name']}
#                                                 else:
#                                                     if isinstance(x['children'][6]['children'][6]['children'],list):
#                                                         return set (x['children'][6]['children'][6]['children'])
#                                                     else:
#                                                         return set(x['children'][6]['children'][6]['children']['name'].values())
                                                    


#                             return set()
#                 print(set)
                                            
                                            

# 1 ______________________________________________________________________________________________________________________________________________


# s=input('Enter first word:  ')
# t=input('Enter second word:  ')
# def somorphik(s,t):
#     if len(s)!=len(t):
#         return False
#     s_t={}
#     t_s={}
#     for i in range(len(s)):
#         s_word=s[i]
#         t_word=t[i]
#         if s_word not in s_t:
#             s_t[s_word]=t_word
#         elif s_t[s_word]!=t_word:
#             return False
#         if t_word not in t_s:
#             t_s[t_word]=s_word
#         elif t_s[t_word]!=s_word:
#             return True
#     print(somorphik(s,t))
    

# 2 _________________________________________________________________________________________________________________________________________



# num=int(input('Enter number:  '))
# if num & (num-1)==0:
#     print(True)
# elif num & (num-1)!=1:
#     print(False)


# 3 ____________________________________________________________________________________________________________________________________________________


# x=int(input('Enter number:  '))
# y=int(input('Enter number:  '))
# def b_i_n(x,y):
#     bin_x=bin(x)[2:]
#     bin_y=bin(y)[2:]
#     len_x=len(bin_x)
#     len_y=len(bin_y)
#     max_len_of_x_y=max(len_x,len_y)
#     if len_x<max_len_of_x_y:
#         bin_x='0'*(max_len_of_x_y-len_x)+bin_x
#     else:
#         bin_y='0'*(max_len_of_x_y-len_y)+bin_y
#         distance=0
#         for i in range(max_len_of_x_y):
#             if bin_x[i]!=bin_y[i]:
#                 distance+=1
#                 return distance
#             print(distance(x,y))



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































